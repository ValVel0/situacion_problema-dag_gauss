---
title: "Codigo - ArtÃ­culo 2: Redes bayesianas gaussianas"
author: "A01247217-Pedro Silva"
format:
   html:
     toc: true
     html-math-method: katex
     embed-resources: true
     self-contained-math: true
     df-print: kable
editor: source
---

# carga de todas las bases y filtrado para obtener la base de datos que va aser usada \


```{r}
 install.packages("janitor")
 install.packages("skimr")
```

```{r}
library(readr)
library(dplyr)
library(readr)
library(skimr)
library(janitor)
library(tidyr)
library(tidyverse)
```

```{r}
load("objetos/dag_1.RData")

# Revisar la DAG
dag_1
graphviz.plot(dag_1, shape = "ellipse")
```


# Carga y limpia de Muestras

```{r}
muestras = read_delim("data/ensanut2022_muestras.csv", delim = ";")
head(muestras)
```

```{r}
glimpse(muestras)
```

```{r}
muestras = muestras |>
            clean_names()
```

```{r}
summary(muestras)
```
```{r}
muestras = muestras |>
        mutate(sexo = case_when(h0302 == 1 ~ "hombre",h0302 == 2 ~ "mujer"))
```

```{r}
muestras <- muestras %>% rename(edad = h0303)
```


```{r}
muestras = muestras |>
        select(sexo, edad, entidad, desc_mun, estrato, valor_pcr, valor_colest, valor_col_ldl, valor_col_hdl, valor_trig, valor_glu_suero, valor_hb1ac, hb02, valor_creat)
```

```{r}
head(muestras)
```

```{r}
glimpse(muestras)
```

```{r}
muestras = muestras |>
        mutate(across(contains("valor"), ~ as.numeric(str_replace(., ",", "\\."))))

muestras = muestras |>
        mutate(across(hb02, ~ as.numeric(str_replace(., ",", "\\."))))
```

```{r}
muestras_limp <- muestras |>
  filter(if_all(c(hb02, valor_pcr, valor_colest, valor_col_ldl, valor_col_hdl, 
                  valor_trig, valor_glu_suero, valor_hb1ac, valor_creat), 
                ~ !is.na(.)))
```

```{r}
glimpse(muestras_limp)
```

#Carga y limpia de calidad_aire


```{r}
aire = read_csv("data/calidad_aire_2025.csv")
head(aire)
```

```{r}
aire = aire |>
            clean_names()
```

```{r}
aire = aire |>
        select(municipio,tipo_de_fuente,so_2,co,n_ox,cov,pm_010,pm_2_5,nh_3,entidad)
```

```{r}
head(aire)
```

```{r}
aire_limp <- aire |>
  filter(if_all(c(municipio,tipo_de_fuente,so_2,co,n_ox,cov,pm_010,pm_2_5,nh_3,entidad), 
                ~ !is.na(.)))
```
 