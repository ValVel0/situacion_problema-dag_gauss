---
title: "imagenes de DAGs"
format: html
editor: visual
---

# Primera DAG

La primera DAG se construyó con una entrevista a la Dra. Mariana Sofía Flores Jiménez.

```{r}
library(tidyverse)
library(mgcv)
library(gratia)
library(ggplot2)
library(bnlearn)
library(dplyr)
```

```{r}
dag_1 = empty.graph(nodes = c("sexo", "edad", "entidad", 
                                 "valor_PCR", "valor_COLEST", "valor_COL_LDL", "valor_COL_HDL", 
                                 "valor_TRIG", "valor_GLU_SUERO", "valor_HB1AC", "valor_HB", "valor_CREAT",
                                 "SO_2", "CO", "NOx", "PM_010", "PM_2_5", "COV", "NH_3"))

arc_set1 = matrix(c(
  #demográficos con biomarcadores
  "sexo", "valor_COLEST",
  "sexo", "valor_COL_LDL",
  "sexo", "valor_COL_HDL",
  "sexo", "valor_TRIG",
  "sexo", "valor_GLU_SUERO",
  "sexo", "valor_CREAT",
  
  "edad", "valor_COLEST",
  "edad", "valor_COL_LDL",
  "edad", "valor_COL_HDL",
  "edad", "valor_TRIG",
  "edad", "valor_GLU_SUERO",
  "edad", "valor_CREAT",
  
  "entidad", "valor_COLEST",
  "entidad", "valor_TRIG",
  "entidad", "valor_GLU_SUERO",
  "entidad", "valor_COL_LDL",
  "entidad", "valor_COL_HDL",
  
  # interacciones biomarcadores
  "valor_GLU_SUERO", "valor_HB1AC",
  "valor_TRIG", "valor_COL_HDL",
  #"valor_COLEST", "valor_COL_LDL",
  
  # contaminantes individuales con biomarcadores
  "SO_2", "valor_TRIG",
  "SO_2", "valor_COLEST",
  "CO", "valor_GLU_SUERO",
  "CO", "valor_HB",
  "CO", "valor_COLEST",
  "PM_010", "valor_HB",
  "PM_010", "valor_GLU_SUERO",
  "PM_010", "valor_HB1AC",
  "PM_2_5", "valor_HB",
  "PM_2_5", "valor_GLU_SUERO",
  "PM_2_5", "valor_HB1AC",
  "COV", "valor_COLEST",
  "COV", "valor_TRIG",
  "COV", "valor_GLU_SUERO",
  "NH_3", "valor_COLEST",
  "NH_3", "valor_TRIG",
  "NH_3", "valor_GLU_SUERO",
  
  # contaminantes combinados --> inflamación
  # Aunque la pregunta 14 no fue respondida, de la pregunta 19, se puede deducir que un biomarcador de estrés oxidativo indirecto es la proteína C
  
  "SO_2", "valor_PCR",
  "CO", "valor_PCR",
  "NOx", "valor_PCR",
  "PM_010", "valor_PCR",
  "PM_2_5", "valor_PCR",
  "COV", "valor_PCR",
  "NH_3", "valor_PCR"

  
), byrow = TRUE, ncol = 2,
dimnames = list(NULL, c("from", "to")))

# arcos de DAG
arcs(dag_1) = arc_set1

dag_1
```

```{r}
dev.new(width=12, height=8)  
graphviz.plot(dag_1, shape = "ellipse")
```

```{r}
# guardamos la imagen
png("figures/diagrama_dag_1.png", width = 1200, height = 800, res = 150)
graphviz.plot(dag_1, shape = "ellipse")
dev.off()
```

### Guardamos como un objeto

```{r}
save(dag_1, file = "objetos/dag_1.RData")
```

# Segunda DAG

La segunda DAG se contruyó con las respuestas de la entrevista al Rafael Alberto Pérez San Lázaro

```{r}

# en esta entrevista, la entidad federativa no tiene ninguna relación
dag_2 = empty.graph(nodes = c("sexo", "edad", "entidad", 
                                 "valor_PCR", "valor_COLEST", "valor_COL_LDL", "valor_COL_HDL", 
                                 "valor_TRIG", "valor_GLU_SUERO", "valor_HB1AC", "valor_HB", "valor_CREAT",
                                 "SO_2", "CO", "NOx", "PM_010", "PM_2_5", "COV", "NH_3"))

arc_set2 <- matrix(c(
  
  #demográficos con biomarcadores
  "sexo", "valor_COLEST",
  "sexo", "valor_COL_LDL",
  "sexo", "valor_COL_HDL",
  "sexo", "valor_TRIG",
  "sexo", "valor_GLU_SUERO",
  "sexo", "valor_CREAT",
  
  "edad", "valor_COLEST",
  "edad", "valor_COL_LDL",
  "edad", "valor_COL_HDL",
  "edad", "valor_TRIG",
  "edad", "valor_GLU_SUERO",
  "edad", "valor_CREAT",
  
  # interacciones biomarcadores
  "valor_GLU_SUERO", "valor_HB1AC",
  "valor_COLEST", "valor_COL_LDL",
  "valor_TRIG", "valor_COL_HDL",
  "valor_TRIG", "valor_COL_LDL",
  
  "sexo", "valor_CREAT",
  "edad", "valor_CREAT",
  "valor_HB", "valor_CREAT",
  
  # contaminantes --> biomarcadores
  "SO_2", "valor_TRIG",
  "SO_2", "valor_COLEST",
  "CO", "valor_GLU_SUERO",
  "CO", "valor_HB",
  "CO", "valor_COLEST",
  "NOx", "valor_PCR",
  "PM_010", "valor_HB",
  "PM_010", "valor_GLU_SUERO",
  "PM_010", "valor_HB1AC",
  "PM_2_5", "valor_HB",
  "PM_2_5", "valor_GLU_SUERO",
  "PM_2_5", "valor_HB1AC",
  "COV", "valor_COLEST",
  "COV", "valor_TRIG",
  "COV", "valor_GLU_SUERO",
  "NH_3", "valor_COLEST",
  "NH_3", "valor_TRIG",
  "NH_3", "valor_GLU_SUERO",
  
  # biomarcadores + contaminantes --> PCR
  #"edad", "valor_COL_LDL",
  #"edad", "valor_TRIG",
  "SO_2", "valor_PCR",
  "CO", "valor_PCR",
  "NOx", "valor_PCR",
  "PM_010", "valor_PCR",
  "PM_2_5", "valor_PCR",
  "COV", "valor_PCR",
  "NH_3", "valor_PCR",
  "valor_PCR", "valor_TRIG",
  "valor_PCR", "valor_GLU_SUERO",
  "valor_PCR", "valor_HB1AC",
  "valor_PCR", "valor_COL_HDL"
  
  
), byrow = TRUE, ncol = 2,
dimnames = list(NULL, c("from", "to")))

# arcos de DAG
arcs(dag_2) = arc_set2

dag_2

```

```{r}
dev.new(width=12, height=8)  
graphviz.plot(dag_2, shape = "ellipse")
```

```{r}
# guardamos la imagen
png("figures/diagrama_dag_2.png", width = 1200, height = 800, res = 150)
graphviz.plot(dag_2, shape = "ellipse")
dev.off()
```

### Guardamos como objeto

```{r}
save(dag_2, file = "objetos/dag_2.RData")
```

# Tercera DAG

La tercera DAG se construyo con ayuda de la Dra. Beatriz Adriana Barragán Castillo por medio de una consulta sobre las emisiones y sus afectaciones en los biomarcadores.

```{r}
# Al igual que en la segunda DAG, la entidad no tiene ninguna relación.
dag_3 = empty.graph(nodes = c("sexo", "edad", "entidad", 
                                 "valor_PCR", "valor_COLEST", "valor_COL_LDL", "valor_COL_HDL", 
                                 "valor_TRIG", "valor_GLU_SUERO", "valor_HB1AC", "valor_HB", "valor_CREAT",
                                 "SO_2", "CO", "NOx", "PM_010", "PM_2_5", "COV", "NH_3"))

arc_set3 <- matrix(c(
  #Demográficos con biomarcadores
  "sexo", "valor_HB",
  "sexo", "valor_PCR",
  "sexo", "valor_COLEST",
  "sexo", "valor_COL_LDL",
  "sexo", "valor_COL_HDL",
  "sexo", "valor_TRIG",
  "sexo", "valor_GLU_SUERO",
  "sexo", "valor_HB1AC",
  "sexo", "valor_CREAT",
  "edad", "valor_HB",
  "edad", "valor_PCR",
  "sexo", "valor_COLEST",
  "edad", "valor_COL_LDL",
  "edad", "valor_COL_HDL",
  "edad", "valor_TRIG",
  "edad", "valor_GLU_SUERO",
  "edad", "valor_HB1AC",
  "edad", "valor_CREAT",
  #Emisiones + biomarcadores:
  "NH_3", "valor_HB",
  "NH_3", "valor_CREAT",
  "NH_3", "valor_PCR",
  "NH_3", "valor_COLEST",
  "NH_3", "valor_COL_LDL",
  "NH_3", "valor_COL_HDL",
  "NH_3", "valor_TRIG",
  "CO", "valor_HB",
  "SO_2", "valor_PCR",
  "SO_2", "valor_CREAT",
  "NOx", "valor_PCR",
  "NOx", "valor_TRIG",
  "NOx", "valor_COLEST",
  "PM_010", "valor_PCR",
  "PM_010", "valor_COLEST",
  "PM_2_5", "valor_PCR",
  "PM_2_5", "valor_COLEST",
  "COV", "valor_PCR",
  "COV", "valor_COLEST"
), byrow = TRUE, ncol = 2,
dimnames = list(NULL, c("from", "to")))

# arcos de DAG
arcs(dag_3) = arc_set3

dag_3
```

```{r}
dev.new(width=12, height=8)  
graphviz.plot(dag_3, shape = "ellipse")
```

```{r}
# guardamos la imagen
png("figures/diagrama_dag_3.png", width = 1200, height = 800, res = 150)
graphviz.plot(dag_3, shape = "ellipse")
dev.off()
```

### Guardamos como objeto

```{r}
save(dag_3, file = "objetos/dag_3.RData")
```

# Aplicación de las DAGs

## Cargar bases de datos

```{r}
df_final = read_delim("data/dataset.csv")
```

```{r}
df_final$estrato <- NULL
head(df_final)
glimpse(df_final)
```

```{r}
df_knn3 = read_delim("data/k3_dataset.csv")
```

```{r}
df_knn3$estrato <- NULL
head(df_knn3)
glimpse(df_knn3)
```

## Comparacion de DAGS

### Ver si hay una diferencia de variables entre las dags y las bases de datos

```{r}
# creacion de conteo de vraibles

# dags

dag1_vars <- nodes(dag_1)

dag2_vars <- nodes(dag_2)

dag3_vars <- nodes(dag_3)

# dataframes

df_final_vars <- names(df_final)
df_knn3_vars <- names(df_knn3)

```

```{r}
# comparacion de variables 

# DAG 1

# df_final comparacion

cat("Compracion Dag 1 con df_final:\n")

# Variables en el DAG pero no en los datos
missing_in_data <- setdiff(dag1_vars, df_final_vars)
cat("Variables en el DAG_1 pero no en df_final:\n")
cat(paste(missing_in_data, collapse = " "), "\n\n")


# Variables en los datos pero no en el DAG
extra_in_data <- setdiff(df_final_vars, dag1_vars)
cat("Variables en df_final pero no en el DAG_1:\n")
cat(paste(extra_in_data, collapse = " "), "\n\n")

# df_knn3 comparacion 

cat("Compracion Dag 1 con df_knn3:\n")

# Variables en el DAG pero no en los datos
missing_in_data <- setdiff(dag1_vars, df_knn3_vars)
cat("Variables en el DAG_1 pero no en df_knn3:\n")
cat(paste(missing_in_data, collapse = " "), "\n\n")


# Variables en los datos pero no en el DAG
extra_in_data <- setdiff(df_knn3_vars, dag1_vars)
cat("Variables en df_knn3 pero no en el DAG_1:\n")
cat(paste(extra_in_data, collapse = " "), "\n\n")

# DAG 2

# df_final comparacion

cat("Compracion Dag 2 con df_final:\n")

# Variables en el DAG pero no en los datos
missing_in_data <- setdiff(dag2_vars, df_final_vars)
cat("Variables en el DAG_2 pero no en df_final:\n")
cat(paste(missing_in_data, collapse = " "), "\n\n")


# Variables en los datos pero no en el DAG
extra_in_data <- setdiff(df_final_vars, dag2_vars)
cat("Variables en df_final pero no en el DAG_2:\n")
cat(paste(extra_in_data, collapse = " "), "\n\n")

# df_knn3 comparacion 

cat("Compracion Dag 2 con df_knn3:\n")

# Variables en el DAG pero no en los datos
missing_in_data <- setdiff(dag2_vars, df_knn3_vars)
cat("Variables en el DAG_2 pero no en df_knn3:\n")
cat(paste(missing_in_data, collapse = " "), "\n\n")


# Variables en los datos pero no en el DAG
extra_in_data <- setdiff(df_knn3_vars, dag2_vars)
cat("Variables en df_knn3 pero no en el DAG_2:\n")
cat(paste(extra_in_data, collapse = " "), "\n\n")

# DAG 3

# df_final comparacion

cat("Compracion Dag 3 con df_final:\n")

# Variables en el DAG pero no en los datos
missing_in_data <- setdiff(dag3_vars, df_final_vars)
cat("Variables en el DAG_3 pero no en df_final:\n")
cat(paste(missing_in_data, collapse = " "), "\n\n")


# Variables en los datos pero no en el DAG
extra_in_data <- setdiff(df_final_vars, dag3_vars)
cat("Variables en df_final pero no en el DAG_3:\n")
cat(paste(extra_in_data, collapse = " "), "\n\n")

# df_knn3 comparacion 

cat("Compracion Dag 3 con df_knn3:\n")

# Variables en el DAG pero no en los datos
missing_in_data <- setdiff(dag3_vars, df_knn3_vars)
cat("Variables en el DAG_3 pero no en df_knn3:\n")
cat(paste(missing_in_data, collapse = " "), "\n\n")


# Variables en los datos pero no en el DAG
extra_in_data <- setdiff(df_knn3_vars, dag3_vars)
cat("Variables en df_knn3 pero no en el DAG_3:\n")
cat(paste(extra_in_data, collapse = " "), "\n")

```

# Ver fuerza de los dags

## arc_strenght de las dags

```{r}

strenght_df_final_dag1 = arc.strength(dag_1, data = df_final, criterion = 'cor')
cat("Strenght de dag_1 con df_final:\n")
strenght_df_final_dag1

```

```{r}

strenght_df_knn3_dag1 = arc.strength(dag_1, data = df_knn3, criterion = 'cor')
cat("Strenght de dag_1 con df_knn3:\n")
strenght_df_knn3_dag1

```

```{r}
strenght_df_final_dag2 = arc.strength(dag_2, data = df_final, criterion = 'cor')
cat("Strenght de dag_2 con df_final:\n")
strenght_df_final_dag2

```

```{r}

strenght_df_knn3_dag2 = arc.strength(dag_2, data = df_knn3, criterion = 'cor')
cat("Strenght de dag_2 con df_knn3:\n")
strenght_df_knn3_dag2

```

```{r}

strenght_df_final_dag3 = arc.strength(dag_3, data = df_final, criterion = 'cor')
cat("Strenght de dag_3 con df_final:\n")
strenght_df_final_dag3
```

```{r}

strenght_df_knn3_dag3 = arc.strength(dag_3, data = df_knn3, criterion = 'cor')
cat("Strenght de dag_3 con df_final:\n")
strenght_df_knn3_dag3

```

## Scores

```{r}
cat("Score de dag_1 con df_final:\n")
score(dag_1, data = df_final, type = "bic-g")

cat("Score de dag_1 con df_knn3:\n")
score(dag_1, data = df_knn3, type = "bic-g")
```

```{r}
cat("Score de dag_2 con df_final:\n")
score(dag_2, data = df_final, type = "bic-g")

cat("Score de dag_2 con df_knn3:\n")
score(dag_2, data = df_knn3, type = "bic-g")
```

```{r}
cat("Score de dag_3 con df_final:\n")
score(dag_3, data = df_final, type = "bic-g")

cat("Score de dag_3 con df_knn3:\n")
score(dag_3, data = df_knn3, type = "bic-g")
```

Basándonos en los scores proporcionados, donde un valor menos negativo indica un mejor ajuste del modelo a los datos:

Para los datos originales (df_final): El dag_2 obtuvo el mejor score (-186319.3), seguido de dag_1 (-187889.7) y finalmente dag_3 (-188021.4). Esto sugiere que dag_2 representa mejor la estructura de los datos originales.

Para los datos imputados (df_knn3): Igualmente, el dag_2 obtuvo el mejor score (-1212470), seguido de dag_1 (-1216063) y por último dag_3 (-1216480) lo que indica que dag_2 mantiene su superioridad estructural incluso después de la imputación con KNN.

En resumen, dag_2 es el modelo más adecuado dirigido tanto para los datos originales como para los datos imputados, lo que demuestra la robustez ante el proceso de imputación utilizando KNN y su consistencia y capacidad de modelar adecuadamente las relaciones de dependencia en los datos.

# Ajuste de GBN y pruebas BIC & AIC

Por los resultados de la base de datos df_final y df_knn3, se selecciona la df_final que, aunque no tiene la extensión completa de las bases originales, mantiene la relación de los datos más intacta.

Se ajustan las 3 GBNs:

```{r}
gbn_dag1 = bn.fit(dag_1, data = df_final)
gbn_dag2 = bn.fit(dag_2, data = df_final)
gbn_dag3 = bn.fit(dag_3, data = df_final)
```

Aplicamos una prueba BIC y AIC a las GBNs

```{r}
score(dag_1, df_final, type = "bic-g")
score(dag_2, df_final, type = "bic-g")
score(dag_3, df_final, type = "bic-g")
```

```{r}
score(dag_1, df_final, type = "aic-g")
score(dag_2, df_final, type = "aic-g")
score(dag_3, df_final, type = "aic-g")
```

Para ambos resultados de BIC y AIC, la segunda dag es la que mantiene el valor más alto (menos negativo) con un $\text{BIC} = -186319.3$ y un $\text{AIC} = -186085.8$, mientras las otras DAGs: DAG 1 con $\text{BIC} = -187889.7$ y un $\text{AIC} = -187661.8$ y DAG 3 con $\text{BIC} = -188021.4$ y un $\text{AIC} = -187813.3$. Por ello, seleccionamos la DAG 2 con mejor BIC.

# Análisis exploratorio con modelos lineales

```{r}
mod_lm <- lm(valor_PCR ~ PM_2_5, data = df_final)
summary(mod_lm)
coef(mod_lm)
```

```{r}
ggplot(df_final, aes(x = PM_2_5, y = valor_PCR)) +
  geom_point(color = "steelblue", alpha = 0.3) +
  geom_smooth(method = lm, se = FALSE, lwd = 2, color = "dodgerblue") +
  labs(x = "PM2.5 (μg/m³)", y = "Proteína C Reactiva (mg/L)", 
       title = "Relación lineal entre PM2.5 y PCR") +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", margin = margin(0, 0, 5, 0)),
        axis.title.x = element_text(face = "bold"),
        axis.title.y = element_text(face = "bold", angle = 90))
```
```{r}
#| eval: false
ggsave("figures/lm_gbn.png", 
       plot = last_plot(),  
       width = 8, 
       height = 6, 
       dpi = 300,
       bg = "white")

```


```{r}
mod_gam_PCR <- gam(valor_PCR ~ s(PM_2_5) + s(edad) + factor(sexo) + s(SO_2) + s(NOx), 
                  data = df_final, method = "REML")
summary(mod_gam_PCR)
```

```{r}
draw(mod_gam_PCR, select = "s(PM_2_5)", residuals = TRUE, rug = FALSE) +
  labs(x = "PM2.5 (μg/m³)", y = "s(PM2.5)", 
       title = "Efecto parcial del PM2.5 sobre la PCR") +
  theme_bw() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold",
                                  margin = margin(0, 0, 5, 0)),
        axis.title.x = element_text(face = "bold"),
        axis.title.y = element_text(face = "bold", angle = 90),
        legend.title = element_text(hjust = 0.5, face = "bold"),
        legend.text = element_text(hjust = 0.5),
        strip.text = element_text(hjust = 0.5, face = "bold",
                                  margin = margin(2, 3, 3, 3)),
        plot.subtitle = element_text(hjust = 0.5, face = "bold",
                                     size = 10,
                                     margin = margin(0, 0, 5, 0)))

```
```{r}
#| eval: false
ggsave("figures/gam_gbn.png", 
       plot = last_plot(),  
       width = 8, 
       height = 6, 
       dpi = 300,
       bg = "white")

```

```{r}
mod_multiple <- lm(valor_PCR ~ PM_2_5 + SO_2 + NOx + valor_TRIG + valor_GLU_SUERO, 
                  data = df_final)
summary(mod_multiple)
```

Revisamos el BIC del modelo con la DAG 2.

```{r}
score(dag_2, data = df_final, type = "bic-g")
```

# Modelo no paramétrico

```{r}
mod_gam_PCR_full <- gam(valor_PCR ~ s(PM_2_5) + s(SO_2) + s(NOx) + s(PM_010) + 
                         s(COV) + s(NH_3) + s(edad) + factor(sexo),
                       data = df_final, method = "REML")

mod_gam_COLEST <- gam(valor_COLEST ~ s(SO_2) + s(CO) + s(COV) + s(NH_3) + 
                       s(edad) + factor(sexo),
                     data = df_final, method = "REML")

mod_gam_TRIG <- gam(valor_TRIG ~ s(SO_2) + s(COV) + s(NH_3) + 
                     s(edad) + factor(sexo),
                   data = df_final, method = "REML")

mod_gam_GLU <- gam(valor_GLU_SUERO ~ s(CO) + s(PM_010) + s(PM_2_5) + 
                    s(COV) + s(NH_3) + s(edad) + factor(sexo),
                  data = df_final, method = "REML")

```

# Inclusión de la variable sexo al modelo

```{r}
mod_sexo <- lm(sexo ~ 1, data = df_final)
mod_edad <- lm(edad ~ 1, data = df_final)
mod_entidad <- lm(entidad ~ 1, data = df_final)
```

```{r}
bic_total <- -1/2*(BIC(mod_gam_PCR_full) + BIC(mod_gam_COLEST) + 
                    BIC(mod_gam_TRIG) + BIC(mod_gam_GLU) + 
                    BIC(mod_sexo) + BIC(mod_edad) + BIC(mod_entidad))
print(bic_total)
```

```{r}
fit_dag2 <- bn.fit(dag_2, data = df_final)
```

# Queries

## Query 1

La primer query, después de reestructurarla, es: ¿Cuál es la probabilidad de que un individuo tenga valores altos de Proteína C Reactiva (valor_PCR, marcador de inflamación) dado que sus niveles de exposición a $\text{PM}_{2.5}$ y $\text{NO}_x$ son altos?

Para conocer los valores que represtan como *alto* en la proteína C reactiva y en las partículas, se investigó en la página de la National Center for Biotechnology Information (NCBI). Según Singh, et al (2025) los niveles de proteína C reactiva son:

-   Evalación moderada: Valores entre $1.0$ y $10.0 mg/dL$.
-   Evación significativa: valores superiores a $10.0 mg/dL$.
-   Elevación severa: valores superiores a $50.0 mg/dL$.

Se tomará la elevación severa como *alta* bajo este contexto de consulta.

Respecto a los gases, según la WHO (2021), los valores de $\text{PM}_{2.5}$ que pueden provocar daños respiratorios o se consideran niveles altos alrededor de $50 \mu g/m^3$. Para los óxidos de nitrógeno, según Jarvis, et al (2010), para los niveles alrededor de $3160 \mu g/m^3$ o $2 \text{ ppm}$ existen efectos bioquímicos significativos en la salud; por ello, se considerarán como *altos*.

```{r}
cpquery(
  gbn_dag2,
  event = (valor_PCR >= 50),
  evidence = list(
    PM_2_5 = 50,   
    NOx   = 3160   
  ),
  method = "lw"
)
```

La probabilidad fue de 0%, por tanto, es posible que no haya tanta presentación de los datos para esos valores, de modo que puede ser un evento poco probable, pero no improbable.

## Query 2

La segunda query, después de reestructurarla, es: ¿Qué tan probable es que una persona tenga creatinina alta (lo que puede indicar problemas en los riñones) si además tiene un mal control de azúcar en la sangre (HbA1c elevado) y vive en un ambiente con mucho $\text{PM}_{2.5}$ en el aire?

Creatinina sérica (indicador de función renal)
Según Mayo Clinic (s.f.):
*   0.74–1.35   mg/dL en hombres
*   0.59–1.04 mg/dL en mujeres

HbA1c (control glucémico)
La American Diabetes Association (ADA) define:
*   ≥ 6.5 % como diagnóstico de diabetes.
*   ≥ 7 % refleja mal control glucémico crónico.

```{r}
cpquery(
  gbn_dag2,
  event = (valor_CREAT >= 1.2),
  evidence = list(
    valor_HB = 7,
    PM_2_5 = 50
  ),
  method = "lw"
)
```

## Query 3

La tercera query es: ¿Checar si los contaminantes aéreos que afectan vías respiratorias también se pueden asociar en cambios a los biomarcadores metabólicos e inflamatorios?


```{r}

# Definir el evento:
# valor_PCR mayor a 3 mg/L (inflamación alta)
# valor_HBAC mayor a 6.5 % (posible diabetes)
# valor_TRIG mayor a 150 mg/dL (triglicéridos altos)

# Definir la evidencia:
# COV > 0.5 ppm (ejemplo umbral)
# NH3 > 10 ppb (ejemplo umbral)
# NOx > 40 ppb (ejemplo umbral)
# PM_2_5 > 12 µg/m³ (ejemplo umbral)

# query
cpquery(
  gbn_dag2,
  event = (valor_PCR >= 50 & valor_HB1AC >= 6.5 & valor_TRIG >= 150),
  evidence = list(
    COV = 0.5,
    NH_3 = 10,
    NOx = 40,
    PM_2_5 = 12
  ),
  method = "lw"
)
```

La probabilidad fue de 0%, por tanto, es posible que no haya datos que coincidan para esos valores, de modo que puede ser un evento muy poco porbable.

Referencias:

Air Quality, Energy and Health (AQE). (2021, 22 septiembre). WHO global air quality guidelines: particulate matter (‎PM2.5 and PM10)‎, ozone, nitrogen dioxide, sulfur dioxide and carbon monoxide. https://www.who.int/publications/i/item/9789240034228

Creatinine test - Mayo Clinic. (s.f.). https://www.mayoclinic.org/tests-procedures/creatinine-test/about/pac-20384646

Jarvis, D. J., Adamkiewicz, G., Heroux, M., Rapp, R., & Kelly, F. J. (2010). Nitrogen dioxide. WHO Guidelines For Indoor Air Quality: Selected Pollutants - NCBI Bookshelf. https://www.ncbi.nlm.nih.gov/books/NBK138707/

NGSP: Clinical use. (s.f.). https://ngsp.org/ADA.asp

Singh, B., Goyal, A., & Patel, B. C. (2025, 3 mayo). C-Reactive Protein: Clinical Relevance and Interpretation. StatPearls - NCBI Bookshelf. https://www.ncbi.nlm.nih.gov/books/NBK441843/




